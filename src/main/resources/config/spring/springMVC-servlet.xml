<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd" >
		
		<!-- 
			扫描使用注解的包，包括子类
		 -->
		 <!-- 扫描controller注解 -->
		<context:component-scan base-package="cn.edu.zzuli.emp.*.controller" />
		<!-- 扫描统一异常处理注解处理器 -->
		<context:component-scan base-package="cn.edu.zzuli.emp.exception" />
		<!-- 扫描工具类注解 -->
		<context:component-scan base-package="cn.edu.zzuli.emp.util" />
		<!-- 
			开启注解
			相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter
			两个bean，配置一些messageconverter。即解决了@Controller注解的使用前提配置
		 -->
		<mvc:annotation-driven />
		
		<!-- 
			静态资源映射
			通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器
		 -->
		<mvc:resources mapping="/images/**" location="/images/" />
		<mvc:resources mapping="/need/**" location="/need/" />
		<mvc:resources mapping="/scripts/**" location="/scripts/" />
		<mvc:resources mapping="/skins/**" location="/skins/" />
		<mvc:resources mapping="/styles/**" location="/styles/" />
		<mvc:resources mapping="/views/**" location="/views/" />
		<mvc:resources mapping="/html/**" location="/html/" />
		
		<!-- 定义拦截器 -->
		<mvc:interceptors>
			<bean class="cn.edu.zzuli.emp.interceptor.LoginInterceptor" />
		</mvc:interceptors>
		
		<!-- 
			定义视图解析器
			把一个逻辑上的视图名称解析成为一个真正的视图
			prefix-前缀	suffix-后缀
			假如返回的逻辑视图名称为user，则解析后成为/user.jsp
		 -->
		<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/"></property>
			<property name="suffix" value=".jsp"></property>
		</bean>
		
		<!-- 开启文件上传支持 -->
		<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> -->
 		
</beans>